@model IEnumerable<ISummationPOC.Models.UserViewModel>

<h2 class="d-flex justify-content-between align-items-center">
    Users List
    <a asp-controller="User" asp-action="CreateUser" class="btn btn-primary mb-3 create-user-btn">
        Create New User
    </a>
</h2>


<!-- Display Success Message if available -->
@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["SuccessDeleteMessage"] != null)
{
    <div id="successDeleteMessage" class="alert alert-success" style="color: red">
        @TempData["SuccessDeleteMessage"]
    </div>
}

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Profile Image</th>
            <th>UserName</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Mobile</th>
            <th>BirthDay</th>
            <th>User Type</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(user.ProfileImage))
                    {
                        <div class="profile-image-container">
                            <a href="@user.ProfileImage" target="_blank">
                                <img src="@user.ProfileImage" alt="Profile Image" class="profile-image" />
                            </a>
                        </div>
                    }
                    else
                    {
                        <span>No Image</span>
                    }
                </td>
                <td>@user.UserName</td>
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.Email</td>
                <td>@user.Mobile</td>
                <td>@user.UserDateOfBirth</td>
                <td>@user.UserType</td>
                <td>
                    <!-- Action Buttons -->
                    <div class="d-flex gap-2">
                        <!-- Update Button -->
                        <a class="btn btn-warning btn-sm" asp-controller="User" asp-action="UpdateUser" asp-route-id="@user.Id">
                            Update
                        </a>

                        <!-- Delete Button -->
                        <form asp-controller="User" asp-action="DeleteUser" asp-route-id="@user.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this user?');" style="display: inline;">
                            <button type="submit" class="btn btn-danger btn-sm">
                                Delete
                            </button>
                        </form>
                    </div>
                </td>

            </tr>
        }
    </tbody>
</table>

<style>
    /* Profile Image Styling */
    .profile-image-container {
        width: 60px;
        height: 60px;
        overflow: hidden;
        position: relative;
        border-radius: 50%;
        border: 3px solid #4CAF50; /* Green border */
    }

    .profile-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
        transition: transform 0.3s ease;
    }

    .profile-image-container:hover .profile-image {
        transform: scale(1.2); /* Zoom effect on hover */
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.3); /* Shadow effect */
    }

    /* Table Styling */
    .thead-dark {
        background-color: #343a40;
        color: white;
        font-weight: bold;
    }

    .table-bordered {
        border: 1px solid #dee2e6;
    }

    .table th, .table td {
        padding: 12px; /* Adjust padding */
    }

    /* Hover Effects */
    tbody tr:hover {
        background-color: #e3f2fd; /* Light blue background on hover */
        cursor: pointer;
        transition: background-color 0.3s ease-in-out;
    }

    /* Button Styling */
    .create-user-btn {
        background: linear-gradient(45deg, #4CAF50, #8BC34A); /* Gradient background */
        color: white;
        font-size: 18px;
        font-weight: bold;
        padding: 12px 24px;
        border-radius: 30px; /* Rounded corners */
        text-decoration: none;
        display: inline-block;
        position: relative;
        transition: all 0.3s ease; /* Smooth transition */
        text-transform: uppercase; /* Uppercase text */
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* Shadow effect */
    }

        .create-user-btn:hover {
            background: linear-gradient(45deg, #8BC34A, #4CAF50); /* Inverted gradient on hover */
            transform: translateY(-5px); /* Lift the button slightly */
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3); /* Increased shadow on hover */
        }

        .create-user-btn:active {
            transform: translateY(2px); /* Slight shrinking when clicked */
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3); /* Adjust shadow when clicked */
        }

    /* Dropdown Styling */
    .action-btn {
        background-color: #6c757d;
        color: white;
        border: 2px solid #6c757d; /* Border with matching color */
        padding: 8px 16px;
        font-size: 14px;
        font-weight: bold;
        text-transform: uppercase;
        border-radius: 50px;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .action-btn:hover {
            background-color: #5a6268; /* Darken background on hover */
            color: #fff;
            border: 2px solid #5a6268;
            transform: scale(1.05); /* Slight scaling */
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2); /* Larger shadow */
        }

    .dropdown-item {
        font-size: 14px;
        text-transform: none;
    }

        .dropdown-item.text-warning {
            color: #ffb600; /* Custom warning color */
        }

        .dropdown-item.text-danger {
            color: #d9534f; /* Danger color */
        }

    .dropdown-menu {
        min-width: 150px;
    }

    /* Success/Failure Message Styling */
    .alert {
        margin-bottom: 20px;
        padding: 10px;
        border-radius: 5px;
        transition: opacity 0.5s ease;
    }

    #successMessage, #successDeleteMessage {
        opacity: 1;
        transition: opacity 1s ease;
    }

        #successMessage.hidden, #successDeleteMessage.hidden {
            opacity: 0;
        }
</style>

<script>
    window.onload = function () {
        // Success message timeout
        var successMessage = document.getElementById('successMessage');
        if (successMessage) {
            setTimeout(function () {
                successMessage.classList.add('hidden');
            }, 10000); // 10 seconds
        }

        // Success delete message timeout
        var successDeleteMessage = document.getElementById('successDeleteMessage');
        if (successDeleteMessage) {
            setTimeout(function () {
                successDeleteMessage.classList.add('hidden');
            }, 10000); // 10 seconds
        }
    };
</script>
